{% set name = "python-pkcs11" %}
{% set version = "0.5.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 154150ce529ed0f8a7ed7d7ffe3a5be0211427c3ecb8e135fa12042fb3a66790
  patches:
    - 0001-use-aenum-py-lt-36.diff  # [py<36]

build:
  number: 1002
  skip: True  # [win]
  script: "{{ PYTHON }} -m pip install . --no-deps -vv"

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - cython
    - python
    - pip
    - setuptools_scm
  run:
    - python
    - aenum >=2.0.7,<2.1  # [py<36]
    - asn1crypto ==0.22.0
    - cached-property ==1.3.0

test:
  imports:
    - pkcs11
    - pkcs11.constants
    - pkcs11.mechanisms
    - pkcs11.exceptions
    - pkcs11.util
    - pkcs11.util.rsa
    - pkcs11.util.dsa
    - pkcs11.util.dh
    - pkcs11.util.ec
    - pkcs11.util.x509


about:
  home: http://python-pkcs11.readthedocs.io/
  license: MIT
  license_family: MIT
  summary: 'A high level Python interface to the PKCS#11 (Cryptoki) standard to support HSM and Smartcard devices'

  description: |
      A high level, "more Pythonic" interface to the PKCS#11 (Cryptoki) standard to support
      HSM and Smartcard devices in Python.
      The interface is designed to follow the logical structure of a HSM, with useful
      defaults for obscurely documented parameters. Many APIs will optionally accept
      iterables and act as generators, allowing you to stream large data blocks for
      symmetric encryption.
  doc_url: http://python-pkcs11.readthedocs.io/en/latest/
  dev_url: https://github.com/danni/python-pkcs11

extra:
  recipe-maintainers:
    - sodre
